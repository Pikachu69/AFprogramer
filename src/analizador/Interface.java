package analizador;


import java.awt.BorderLayout;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultStyledDocument;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyleContext;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author necro
 */
// para los comentarios poner una variable de charat(i) y que compare con charat(i+1)
// si el primero es un guion y el segundo tambien no lo tome en el automata que brinque la linea
public class Interface extends javax.swing.JFrame {

    private String r = "";
    private DefaultStyledDocument doc;
    private DefaultTableModel dtm;
    private static ArrayList<String> listaErrores;
    private static ArrayList<String> lista3 = new ArrayList<String>();
    private static ArrayList<String> produtions = new ArrayList<String>(); //variable para gramatica  himura
    private static ArrayList<String> lexemes = new ArrayList<String>(); //variable para tabla de simbolos himura

    static ArrayList<String> listaLexemas;
    static String DireccionPath = "";
    private FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos AFprogramer ", "af");

    /**
     * Creates new form Interface
     */
    public Interface() {
        listaLexemas = new ArrayList<String>();
        listaErrores = new ArrayList<String>();
        final StyleContext cont = StyleContext.getDefaultStyleContext();
        final AttributeSet Black = cont.addAttribute(cont.getEmptySet(), StyleConstants.Foreground, Color.BLACK);
        final AttributeSet blue = cont.addAttribute(cont.getEmptySet(), StyleConstants.Foreground, Color.blue);

        initComponents();
        
        Errores.setForeground(Color.red);
        tp.requestFocus();
    }
//-----------------------------------------------Metodos Necesarios para el color-----------------------------------------------------
    
    private int findLastNonWordChar(String text, int index) {
        while (--index >= 0) {
            if (String.valueOf(text.charAt(index)).matches("\\W")) {
                break;
            }
        }
        return index;
    }

    private int findFirstNonWordChar(String text, int index) {
        while (index < text.length()) {
            if (String.valueOf(text.charAt(index)).matches("\\W")) {
                break;
            }
            index++;
        }
        return index;
    }

//--------------------------------------------------------------FIN--------------------------------------------------------------------
   
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel_Norte = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        Panel_Sur = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Errores = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        Panel_Derecho = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnAbrir = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        Compilar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lineaContadora = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        tp = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablatokens = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        BarraMenus = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Panel_Norte.setBackground(new java.awt.Color(0, 0, 0));
        Panel_Norte.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        Panel_Norte.setMaximumSize(new java.awt.Dimension(32767, 50));
        Panel_Norte.setPreferredSize(new java.awt.Dimension(589, 75));

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("AFprogramer");

        javax.swing.GroupLayout Panel_NorteLayout = new javax.swing.GroupLayout(Panel_Norte);
        Panel_Norte.setLayout(Panel_NorteLayout);
        Panel_NorteLayout.setHorizontalGroup(
            Panel_NorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_NorteLayout.createSequentialGroup()
                .addContainerGap(442, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(428, 428, 428))
        );
        Panel_NorteLayout.setVerticalGroup(
            Panel_NorteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_NorteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(Panel_Norte, java.awt.BorderLayout.NORTH);

        Panel_Sur.setBackground(new java.awt.Color(255, 153, 0));

        Errores.setEditable(false);
        Errores.setColumns(20);
        Errores.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        Errores.setRows(5);
        Errores.setCaretColor(new java.awt.Color(255, 0, 0));
        jScrollPane1.setViewportView(Errores);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel1.setText("Output");

        javax.swing.GroupLayout Panel_SurLayout = new javax.swing.GroupLayout(Panel_Sur);
        Panel_Sur.setLayout(Panel_SurLayout);
        Panel_SurLayout.setHorizontalGroup(
            Panel_SurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_SurLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_SurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1076, Short.MAX_VALUE)
                    .addGroup(Panel_SurLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        Panel_SurLayout.setVerticalGroup(
            Panel_SurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_SurLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(Panel_Sur, java.awt.BorderLayout.PAGE_END);

        Panel_Derecho.setBackground(new java.awt.Color(255, 153, 51));
        Panel_Derecho.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btnNuevo.setBackground(new java.awt.Color(0, 0, 0));
        btnNuevo.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        btnNuevo.setForeground(new java.awt.Color(255, 255, 255));
        btnNuevo.setText("Ejemplo");
        btnNuevo.setPreferredSize(new java.awt.Dimension(115, 25));
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnAbrir.setBackground(new java.awt.Color(0, 0, 0));
        btnAbrir.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        btnAbrir.setForeground(new java.awt.Color(255, 255, 255));
        btnAbrir.setText("Abrir");
        btnAbrir.setPreferredSize(new java.awt.Dimension(115, 25));
        btnAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirActionPerformed(evt);
            }
        });

        btnGuardar.setBackground(new java.awt.Color(0, 0, 0));
        btnGuardar.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("Guardar");
        btnGuardar.setPreferredSize(new java.awt.Dimension(115, 25));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        Compilar.setBackground(new java.awt.Color(0, 0, 0));
        Compilar.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        Compilar.setForeground(new java.awt.Color(255, 255, 255));
        Compilar.setText("Compilar");
        Compilar.setPreferredSize(new java.awt.Dimension(115, 25));
        Compilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompilarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel4.setText("Codigo");

        lineaContadora.setEditable(false);
        lineaContadora.setColumns(1);
        lineaContadora.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        lineaContadora.setRows(1);
        lineaContadora.setTabSize(1);
        lineaContadora.setText("1");
        lineaContadora.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lineaContadora.setEnabled(false);
        lineaContadora.setOpaque(false);
        lineaContadora.setPreferredSize(new java.awt.Dimension(10, 22));
        jScrollPane4.setViewportView(lineaContadora);

        tp.setColumns(20);
        tp.setDocument(tp.getDocument());
        tp.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        tp.setRows(5);
        tp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tpKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(tp);

        javax.swing.GroupLayout Panel_DerechoLayout = new javax.swing.GroupLayout(Panel_Derecho);
        Panel_Derecho.setLayout(Panel_DerechoLayout);
        Panel_DerechoLayout.setHorizontalGroup(
            Panel_DerechoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_DerechoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_DerechoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_DerechoLayout.createSequentialGroup()
                        .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAbrir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 281, Short.MAX_VALUE)
                        .addComponent(Compilar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Panel_DerechoLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        Panel_DerechoLayout.setVerticalGroup(
            Panel_DerechoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_DerechoLayout.createSequentialGroup()
                .addGap(0, 37, Short.MAX_VALUE)
                .addGroup(Panel_DerechoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAbrir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Compilar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_DerechoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)))
        );

        getContentPane().add(Panel_Derecho, java.awt.BorderLayout.CENTER);

        jPanel1.setBackground(new java.awt.Color(255, 153, 0));
        jPanel1.setPreferredSize(new java.awt.Dimension(250, 467));

        tablatokens.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        tablatokens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Token", "Lexema"
            }
        ));
        jScrollPane2.setViewportView(tablatokens);

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel5.setText("Tokens");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 19, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.LINE_END);

        BarraMenus.setBackground(new java.awt.Color(102, 102, 102));
        setJMenuBar(BarraMenus);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void CompilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompilarActionPerformed
        try {
            run();

            if (listaErrores.isEmpty()) {
                for (String error : listaErrores) {
                    Errores.append("\n" + error);
                }
            } else {
                Errores.append("\n------------Compilado Correctamente----------------");
            }
            listaErrores.clear();
            lexemes.forEach(x->{System.out.println(x);});
            tablaSimbols();

        } catch (IOException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_CompilarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        guardarArchivo();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirActionPerformed
        abrirArchivo();
    }//GEN-LAST:event_btnAbrirActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed

        Errores.setText("");
        DireccionPath = "";
        tp.setText("state q1, q2;\n"
            + "init q1;\n"
            + "end q2;\n"
            + "alpha a, b;\n"
            + "q1 -> q2(a);\n"
            + "q2 -> q1(b);\n");
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void tpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tpKeyTyped
contarFilas();        // TODO add your handling code here:
    }//GEN-LAST:event_tpKeyTyped

    private void run() throws IOException, Exception {
        //////GUARDANDO CÓDIGO
        String codigo = tp.getText();
        File archivoDeCodigo = new File("fichero.txt");
        FileWriter escribe = new FileWriter(archivoDeCodigo, false);
        escribe.write(codigo);
        escribe.close();
        ///////COMPILANDO CÓDIGO
        String codigoArray[] = {"fichero.txt"};
        Date hora = new Date();
        long tiempo = hora.getTime();

        Sintactico.main(codigoArray);
        long tiempo2 = new Date().getTime();
        //setTiempoDeEjecucion(tiempo2 - tiempo);
        mostrarResultados();

    }

    private void mostrarResultados() {
        if (listaErrores.isEmpty()) {
            Errores.setText("BUILD SUCCESSFUL\n");

        } else {
            for (String error : listaErrores) {
                System.err.println(error);
                Errores.setText(Errores.getText() + error + "\n");
            }
        }
        for (String lexema : listaLexemas) {
            System.out.println(lexema);

        }
    }

    private void tablaSimbols() {
        DefaultTableModel dtm1 = new DefaultTableModel();
        while (dtm1.getRowCount() > 0) {
            dtm.removeRow(0);
        }
        dtm1.addColumn("Token");
        dtm1.addColumn("Lexema");

        lexemes.forEach(x -> {
            String[] lex = x.split(",");

            if (lex[1].matches("(\\W)*(init|state|end|alpha)")) {
                dtm1.addRow(new String[]{lex[0], "Palabra Reservada"});
            } else {
                dtm1.addRow(new String[]{lex[0], lex[1]});
            }

        });
        lexemes.clear();
        tablatokens.setModel(dtm1);
    }

    public static void setError(String error) {
        listaErrores.add(error);
    }

    public static void addProduction(String prod) { //Codigo para video Himura agregas a la variable produtions, en Cup.cup
        produtions.add(prod);
    }

    public static void addLexemes(String lex) { // Codigo para video Himura agregas a la variable lexemes, en Lexer.flex
        lexemes.add(lex);

    }

    public static void tres(String a) {
        lista3.add(a);
    }

    public void guardarArchivo() {
        if (DireccionPath.equals("")) {
            if (tp.getText().equals("")) {
                javax.swing.JOptionPane.showMessageDialog(this, "No hay código que guardar", "Aviso", JOptionPane.ERROR_MESSAGE);
            } else {
                try {
                    JFileChooser guardarA = new JFileChooser();
                    guardarA.showSaveDialog(this);
                    File guardar = guardarA.getSelectedFile();

                    if (guardar != null) {
                        DireccionPath = guardar + ".af";
                        FileWriter save = new FileWriter(guardar + ".af");
                        save.write(tp.getText());
                        save.close();
                    }
                } catch (IOException ex) {
                    System.out.println(ex);
                }
            }

        } else {
            File fichero = new File(DireccionPath);
            PrintWriter writer;
            try {
                writer = new PrintWriter(fichero);
                writer.print(tp.getText());
                writer.close();
            } catch (FileNotFoundException e) {
                System.out.println(e);
            }
        }

    }

    public void GuardarComo() {
        if (tp.getText().equals("")) {
            javax.swing.JOptionPane.showMessageDialog(this, "No hay código que guardar", "Aviso", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                JFileChooser guardarA = new JFileChooser();
                guardarA.showSaveDialog(this);
                File guardar = guardarA.getSelectedFile();

                if (guardar != null) {
                    DireccionPath = guardar + ".af";
                    FileWriter save = new FileWriter(guardar + ".af");
                    save.write(tp.getText());
                    save.close();
                }
            } catch (IOException ex) {
                System.out.println(ex);
            }
        }
    }

    public void abrirArchivo() {
        Errores.setText("");
        JFileChooser AbrirA = new JFileChooser();
        AbrirA.setFileFilter(filter);
        int opcion = AbrirA.showOpenDialog(this);
        if (opcion == JFileChooser.APPROVE_OPTION) {
            tp.setText("");
            tp.setEditable(true);
            DireccionPath = AbrirA.getSelectedFile().getPath();

            File archivo = new File(DireccionPath);
            try {
                BufferedReader leer = new BufferedReader(new FileReader(archivo));
                String linea = leer.readLine();
                String total = "";
                while (linea != null) {
                    total = total + linea + "\n";
                    linea = leer.readLine();
                }
                tp.setText(total);

            } catch (Exception e) {
                System.out.println(e);
            }

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar BarraMenus;
    private javax.swing.JButton Compilar;
    private javax.swing.JTextArea Errores;
    private javax.swing.JPanel Panel_Derecho;
    private javax.swing.JPanel Panel_Norte;
    private javax.swing.JPanel Panel_Sur;
    private javax.swing.JButton btnAbrir;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea lineaContadora;
    private javax.swing.JTable tablatokens;
    private javax.swing.JTextArea tp;
    // End of variables declaration//GEN-END:variables

    private void contarFilas() {
        int totalFilas = tp.getLineCount();
    lineaContadora.setText("1\n");
    for (int i=2;i<=totalFilas;i++){
        lineaContadora.setText(lineaContadora.getText()+i+"\n");
    }//for
    }
}
